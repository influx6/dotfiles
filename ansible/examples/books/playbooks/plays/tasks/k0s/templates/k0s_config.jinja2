apiVersion: k0s.k0sproject.io/v1beta1
kind: ClusterConfig
metadata:
  creationTimestamp: null
  name: k0s
spec:
  api:
    address: {{ item.ipv4 }}
    k0sApiPort: 9443
    port: 6443
    sans:
      - {{ item.ipv4 }}
      - 172.17.0.1
      - 10.146.149.1
      - fe80::ae87:a3ff:fe05:6448
    tunneledNetworkingMode: false
  controllerManager: { }
  extensions:
    helm:
      repositories:
        - name: stable
          url: https://charts.helm.sh/stable
        - name: datawire
          url: https://www.getambassador.io
        - name: jetstack
          url: https://charts.jetstack.io
        - name: longhorn
          url: https://charts.longhorn.io
        - name: traefik
          url: https://helm.traefik.io/traefik
        - name: bitnami
          url: https://charts.bitnami.com/bitnami
        - name: grafana
          url: https://grafana.github.io/helm-charts
        - name: prometheus-community
          url: https://prometheus-community.github.io/helm-charts
      charts:
        - name: longhorn
          chartname: longhorn/longhorn
          version: "1.2.4"
          namespace: longhorn-system
        - name: cert-manager
          chartname: jetstack/cert-manager
          version: "1.8.0"
          namespace: cert-manager
          values: |
            installCRDS: true
        - name: traefik
          chartname: traefik/traefik
          version: "10.3.2"
          namespace: infra
        - name: grafana
          namespace: infra
          chartname: grafana/grafana
          values: |
            replicas: 1
        - name: prometheus-stack
          chartname: prometheus-community/prometheus
          version: "14.6.1"
          values: |
            alertmanager:
              persistentVolume:
                enabled: true
            server:
              persistentVolume:
                enabled: true
          namespace: infra
        - name: metallb
          chartname: bitnami/metallb
          version: "2.5.4"
          namespace: default
          values: |2
            configInline:
              address-pools:
              - name: default
                protocol: layer2
                addresses:
                -  {{ metallb_ip_cdir }}
    storage:
      type: openebs_local_storage
  images:
    calico:
      cni:
        image: docker.io/calico/cni
        version: v3.21.2
      kubecontrollers:
        image: docker.io/calico/kube-controllers
        version: v3.21.2
      node:
        image: docker.io/calico/node
        version: v3.21.2
    coredns:
      image: k8s.gcr.io/coredns/coredns
      version: v1.7.0
    default_pull_policy: IfNotPresent
    konnectivity:
      image: quay.io/k0sproject/apiserver-network-proxy-agent
      version: 0.0.27-k0s1
    kubeproxy:
      image: k8s.gcr.io/kube-proxy
      version: v1.23.3
    kuberouter:
      cni:
        image: docker.io/cloudnativelabs/kube-router
        version: v1.3.2
      cniInstaller:
        image: quay.io/k0sproject/cni-node
        version: 0.1.0
    metricsserver:
      image: k8s.gcr.io/metrics-server/metrics-server
      version: v0.5.2
  installConfig:
    users:
      etcdUser: etcd
      kineUser: kube-apiserver
      konnectivityUser: konnectivity-server
      kubeAPIserverUser: kube-apiserver
      kubeSchedulerUser: kube-scheduler
  konnectivity:
    adminPort: 8133
    agentPort: 8132
  network:
    calico: null
    dualStack: { }
    kubeProxy:
      mode: iptables
    kuberouter:
      autoMTU: true
      mtu: 0
      peerRouterASNs: ""
      peerRouterIPs: ""
    podCIDR: 10.244.0.0/16
    provider: kuberouter
    serviceCIDR: 10.96.0.0/12
  podSecurityPolicy:
    defaultPolicy: 00-k0s-privileged
  scheduler: { }
  storage:
    etcd:
      peerAddress: {{ host_ip }}
    type: etcd
  telemetry:
    enabled: true
status: { }
