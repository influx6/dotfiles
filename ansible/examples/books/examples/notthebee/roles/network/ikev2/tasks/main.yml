---
- name: Set the architecture variable
  set_fact:
    arch: "armhf"
  when: '"armv" in ansible_architecture'

- name: Set the architecture variable
  set_fact:
    arch: "amd64"
  when: '"x86_64" in ansible_architecture'

- name: Create the log diredctory
  file:
    path: "{{ docker_dir }}/{{ container_name }}/log"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes

- name: Create charon.log
  file:
    path: "{{ docker_dir }}/{{ container_name }}/log/charon.log"
    state: touch
    owner: "{{ username }}"
    group: "{{ username }}"
    modification_time: preserve
    mode: 0644

- name: Make sure the {{ container_name }} container is created and running
  docker_container:
    name: 'ikev2'
    image: "notthebee/ikev2:{{ arch }}"
    privileged: yes
    pull: yes
    state: 'started'
    env:
      DNS_SERVERS: "{{ ', '.join(dns_nameservers) }}"
      VPNHOST: "{{ vpn_host }}"
      EMAILADDR:  "{{ email }}"
      VPNUSERNAME:  "{{ username }}"
      VPNPASSWORD:  "{{ vpn_password }}"
      EXCLUDE_SSIDS: "{{ ikev2_excludedssids }}"
    mounts:
      - source: "{{ docker_dir }}/{{ container_name }}/log/charon.log"
        target: "/var/log/charon.log"
        type: bind
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/config:/config"
      - "{{ docker_dir }}/{{ container_name }}/letsencrypt:/etc/letsencrypt"
    ports:
      - 4500:4500/udp
      - 500:500/udp
    restart_policy: unless-stopped

- name: Wait for the mobileconfig file to be generated
  stat:
    path: "{{ docker_dir }}/{{ container_name }}/config/{{ vpn_host }}.mobileconfig"
  register: mobileconfig
  until: mobileconfig.stat.exists
  retries: 10
  delay: 5

- name: Copy the mobileconfig to the local host
  synchronize:
    mode: pull
    delete: yes
    src: "{{ docker_dir }}/{{ container_name }}/config/{{ vpn_host }}.mobileconfig"
    dest: "~/.ansible/ikev2/{{ vpn_host }}.mobileconfig"
