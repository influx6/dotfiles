---
- name: Install netfilters-persistent
  package:
    name: netfilter-persistent
    state: present

- name: Check if rules.v4 are auto-generated
  lineinfile:
    path: /etc/iptables/rules.v4
    regexp: "^# Generated by iptables-save.*$"
    state: absent
  register: autogenerated
  notify:
    - remove the default rules

- name: Add a header into rules.v4
  blockinfile:
    create: yes
    mode: 0644
    block: |
      *filter
      :INPUT DROP [0:0]
      :FORWARD DROP [0:0]
      :OUTPUT ACCEPT [0:0]
    path: /etc/iptables/rules.v4

- name: Allow established and related connections
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: ESTABLISHED,RELATED
    comment: Ansible managed
    jump: ACCEPT

- name: Log port scans
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: NEW
    comment: Ansible managed
    jump: LOG
  when: enable_crowdsec | default(False)

- name: Allow SSH
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ security_ssh_port }}"
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible managed

- name: Allow endlessh
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible managed
  when: enable_endlessh | default(False)

- name: Allow HTTP and HTTPS
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_ports:
      - "80"
      - "443"
    jump: ACCEPT
    comment: Ansible managed
  when: (enable_bunkerized_nginx | default(False)) or (enable_swag | default(False))

- name: Allow IKEv2
  ansible.builtin.iptables:
    chain: INPUT
    protocol: udp
    destination_ports:
      - "4500"
      - "500"
    jump: ACCEPT
    comment: Ansible managed
  when: enable_ikev2 | default(False)

- name: Allow Wireguard
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: 51820
    jump: ACCEPT
    comment: Ansible managed
  when: enable_wireguard | default(False)

- name: Set the policy for the INPUT chain to DROP
  ansible.builtin.iptables:
    chain: INPUT
    policy: DROP

- name: Save new rules
  shell:
    cmd: iptables -t filter -S INPUT | grep "Ansible managed"
  changed_when: no
  register: iptables_rules

- name: Add COMMIT
  lineinfile:
    line: COMMIT
    state: present
    path: /etc/iptables/rules.v4

- name: Save the new rules into rules.v4
  blockinfile:
    block: "{{ iptables_rules.stdout }}"
    state: present
    insertbefore: COMMIT
    path: /etc/iptables/rules.v4
    marker_begin: "CUSTOM RULES BEGIN"
    marker_end: "CUSTOM RULES END"
  notify:
    - restart relevant services
