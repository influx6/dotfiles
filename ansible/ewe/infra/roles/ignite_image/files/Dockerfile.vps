FROM ubuntu:22.04
MAINTAINER Alexander Ewetumo <alex.ewetumo@gmail.com>

ARG USER_SSH_PUB_KEY
ARG USER_SSH_PUB_KEY2

ARG K0S_CTL_VERSION='v0.14.0'
ARG K0S_VERSION='v1.24.4+k0s.0'
ARG K0S_ARCH='amd64'
ENV DEBIAN_FRONTEND='noninteractive'

RUN apt-get update \
    && apt-get install -y  fail2ban curl dbus bridge-utils kmod iproute2 iputils-ping tar \
    zip unzip net-tools apt-utils locales netcat tzdata ca-certificates \
    openssh-server openssl rng-tools sudo systemd supervisor udev vim-tiny neovim wget \
    apt-transport-https containerd gnupg2 build-essential bc curl dkms git gnupg \
    ifupdown iproute2 iptables iputils-ping libc6 libelf-dev net-tools netcat openresolv perl pkg-config qrencode  \
    && update-alternatives --set iptables /usr/sbin/iptables-legacy \
    && apt-get install -y wireguard wireguard-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && echo "" > /etc/machine-id \
    && echo "" > /var/lib/dbus/machine-id \
    && echo "net.ipv4.ip_forward=1" > /etc/sysctl.conf  \
    && echo "net.ipv6.conf.all.forwarding=1" > /etc/sysctl.conf  \
    && sed -i -e 's/^AcceptEnv LANG LC_\*$/#AcceptEnv LANG LC_*/' /etc/ssh/sshd_config \
    && echo "root:root" | chpasswd

RUN useradd -rm -d /home/ubuntu -s /bin/bash -g root -G sudo -p "$(openssl passwd -1 ubuntu)" -u 1001 ubuntu

# copy provided user ssh key into fs
#      && echo "    IdentityFile /etc/ssh/ssh_user_config/user_id_rsa.pub" >> /etc/ssh/ssh_config
RUN mkdir -p /etc/ssh/ssh_user_config/ \
      && mkdir -p /root/.ssh/ \
      && mkdir -p /home/ubuntu/.ssh/ \
      # best case use primary key file
      && echo "${USER_SSH_PUB_KEY}" > /etc/ssh/authorized_keys \
      && echo "${USER_SSH_PUB_KEY}" > /root/.ssh/authorized_keys \
      && echo "${USER_SSH_PUB_KEY}" > /home/ubuntu/.ssh/authorized_keys \
      # worst case use secondary key file
      && echo "${USER_SSH_PUB_KEY}" > /etc/ssh/authorized_keys2 \
      && echo "${USER_SSH_PUB_KEY}" > /root/.ssh/authorized_keys2 \
      && echo "${USER_SSH_PUB_KEY}" > /home/ubuntu/.ssh/authorized_keys2 \
      # best case use primary key file
      && echo "${USER_SSH_PUB_KEY2}" >> /etc/ssh/authorized_keys \
      && echo "${USER_SSH_PUB_KEY2}" >> /root/.ssh/authorized_keys \
      && echo "${USER_SSH_PUB_KEY2}" >> /home/ubuntu/.ssh/authorized_keys \
      # worst case use secondary key file
      && echo "${USER_SSH_PUB_KEY2}" >> /etc/ssh/authorized_keys2 \
      && echo "${USER_SSH_PUB_KEY2}" >> /root/.ssh/authorized_keys2 \
      && echo "${USER_SSH_PUB_KEY2}" >> /home/ubuntu/.ssh/authorized_keys2

# copy specific files over into container for configuration
COPY sshd_config /etc/ssh/sshd_config
COPY fail2ban.conf /etc/fail2ban/jail.conf
COPY fail2ban.conf /etc/fail2ban/jail.local

RUN wget -O /usr/bin/k0s https://github.com/k0sproject/k0s/releases/download/${K0S_VERSION}/k0s-${K0S_VERSION}-${K0S_ARCH} \
    && wget -O /usr/bin/k0sctl https://github.com/k0sproject/k0sctl/releases/download/${K0S_CTL_VERSION}/k0sctl-linux-x64 \
    && wget -O /usr/bin/flanneld https://github.com/flannel-io/flannel/releases/download/v0.20.2/flanneld-amd64 \
    && wget -O /usr/bin/calicoctl https://github.com/projectcalico/calico/releases/download/v3.24.5/calicoctl-linux-amd64 \
    && wget -O /usr/bin/coredns.tar.gz https://github.com/coredns/coredns/releases/download/v1.10.0/coredns_1.10.0_linux_amd64.tgz \
    && wget -O /usr/bin/etcd.tar.gz https://github.com/etcd-io/etcd/releases/download/v3.4.23/etcd-v3.4.23-linux-amd64.tar.gz \
    && tar -xvf /usr/bin/etcd.tar.gz --strip-components=1 -C /usr/bin/  \
    && tar -xvf /usr/bin/coredns.tar.gz -C /usr/bin/  \
    && rm -rf /usr/bin/etcd.tar.gz /usr/bin/coredns.tar.gz /usr/bin/Documentation *.md \
    && chown -R ubuntu:root /home/ubuntu/.ssh \
    && chmod -R 700 /home/ubuntu/.ssh \
    && chmod -R 600 /home/ubuntu/.ssh/authorized_keys \
    && chmod +x /usr/bin/coredns /usr/bin/k0s /usr/bin/k0sctl /usr/bin/calicoctl /usr/bin/flanneld /usr/bin/etcd /usr/bin/etcdctl

USER ubuntu
WORKDIR /home/ubuntu

CMD ["bash"]