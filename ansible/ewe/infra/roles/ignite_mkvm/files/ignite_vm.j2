#jinja2: lstrip_blocks: True
#jinja2: trim_blocks: True
# See documentation: https://ignite.readthedocs.io/en/stable/declarative-config/
# See Ignite VM Spec: https://github.com/weaveworks/ignite/blob/cc6fa4c9aba514e6d6e1030e3c35344f90061715/pkg/apis/ignite/v1alpha4/types.go
{% set vm=item %}
---
apiVersion: ignite.weave.works/v1alpha4
kind: VM
metadata:
  # Automatically set when the object is created
  # created: [RFC3339-formatted date]
  # Required, the name of the VM
  name: {{ vm.vm_name }}
  # Optional, autogenerated if not specified
  # uid: [16-char hex UID]
  # Optional, a string-string map with label keys and values
  labels:
    # Optional, a string-string map with annotation keys and values
    {{ vm.owner_tag }}: {{ vm.owner_name }}
  {% for label in vm.labels %}
    {{ label.name }}: {{ label.value }}
  {% endfor %}
  annotations:
    # Optional, a string-string map with annotation keys and values
    {{ vm.owner_tag }}: {{ vm.owner_name }}
  {% for ann in vm.annotations %}
    {{ ann.name }}: {{ ann.value }}
  {% endfor %}
spec:
  # Optional, how many vCPUs should be allocated for the VM
  # Default: 1
  cpus: {{ vm.vm_cpu }}
  # Optional, how much RAM should be allocated for the VM
  # Default: 512MB
  memory: {{ vm.vm_memory }}
  # Optional, how much free writable space the VM should have at runtime
  # Default: 4GB
  diskSize: {{ vm.vm_disk }}

  image:
    # Required, what OCI image to use as the VM's rootfs
    # For example: weaveworks/ignite-ubuntu:latest
    oci: {{ vm.vm_image }}
  kernel:
    # Optional, the kernel command line for the VM
    # Default: "console=ttyS0 reboot=k panic=1 pci=off ip=dhcp"
    cmdLine: {{ vm.kernel_boot or "console=ttyS0 reboot=k panic=1 pci=off ip=dhcp" }}
    # Required, what OCI image to get the kernel binary (and optionally modules) from
    # Default: weaveworks/ignite-kernel:5.10.51
    oci: {{ vm.kernel or "influx6/ignite-kernel:5.14.16" }}
  sandbox:
      # Optional, what OCI image to use as the ignite sandbox.
      # Default: weaveworks/ignite
      oci: {{ vm.oci_sandbox or "weaveworks/ignite:v0.10.0" }}

  network:
    # Optional, an array of port mappings that map ports bound to the VM to the host
    # Default: unset, no port mappings
    ports:
    # This example maps UDP port 0.0.0.0:6443 inside the VM to 10.0.0.2:443 on the physical host
    #    - hostPort: 433
    #      vmPort: 6443
    #      # Optional, specify an address to bind to on the host
    #      # Default: 0.0.0.0, any address
    #      bindAddress: 10.0.0.2
    #      # Optional, specify a protocol for the port mapping (tcp or udp)
    #      # Default: tcp
    #      protocol: udp
  {% if vm.port_mappings %}
  {%  for port_mapping in vm.port_mappings %}
    - hostPort: {{ port_mapping.host_port }}
      vmPort: {{ port_mapping.vm_port }}
      bindAddress: {{ port_mapping.bind_address or "0.0.0.0" }}
      protocol: {{ port_mapping.protocol or "tcp" }}
  {% endfor %}
  {% endif %}

  storage:
    # Optional, an array of mountPath and name pairs,
    # set the mount points for named volumes inside the VM.
    # Names must match configured named volumes.
    # Default: unset, no mount points
    # volumeMounts:
    # - mountPath: /mnt
    # name: volume0
    # Optional, an array of blockDevice and name pairs,
    # expose block devices on the host inside the VM.
    # The blockDevice path must point to a block device formatted
    # with a filesystem providing an UUID (such as ext4 or xfs).
    # Default: unset, no volume forwarding
    # volumes:
    # - blockDevice:
    #    path: /dev/sdb1
    #  name: volume0
    volumeMounts:
    {% if vm.volume_mounts %}
        {%  for mount in vm.volume_mounts %}
    - mountPath: {{ mount.mount_path }}
      name: {{ mount.name }}
        {% endfor %}
    {% endif %}

    volumes:
    {% if vm.volumes -%}
    {%-  for volume in vm.volumes %}
    - blockDevice:
      path: {{ volume.path }}
      name: {{ volume.name }}
    {% endfor %}
    {% endif %}

    # Optional, provides automation to easily access your VM with the "ignite ssh" command
    # If "ssh: true" is set, Ignite will generate an SSH key and copy the
    # public key into the VM. This allows for automatic "ignite ssh" logins.
    # Alternatively: specify a path to a public key to put in /root/.ssh/authorized_keys in the VM.
    # Default: unset, no actions regarding SSH automation
  # ssh: {{ vm.vm_pub_ssh_key or "true" }}

  copyFiles:
  # Optional, an array of files/directories to copy into the VM on creation
  # Default: unset, nothing will be copied
  # This example copies a Kubernetes KubeConfig file from /etc/kubernetes/admin.conf
  # on the host to /home/user/.kube/config inside the VM
  # - hostPath: /etc/kubernetes/admin.conf
  # vmPath: /home/user/.kube/config
  {% if vm.copy_files %}
  {%  for copy in vm.copy_files %}
  - hostPath: {{ copy.path }}
    vmPath: {{ copy.vm_path }}
    {% endfor %}
    {% endif %}
